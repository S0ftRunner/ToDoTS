{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/components/Page.ts","webpack://my-webpack-project/./src/components/ToDoModel.ts","webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/components/Popup.ts","webpack://my-webpack-project/./src/components/ToDoPresenter.ts","webpack://my-webpack-project/./src/components/Form.ts","webpack://my-webpack-project/./src/components/Item.ts"],"sourcesContent":["import \"./styles/styles.css\";\nimport { Page } from \"./components/Page\";\nimport { todos } from \"./utils/constants\";\nimport { ToDoModel } from \"./components/ToDoModel\";\nimport { ItemPresenter } from './components/ToDoPresenter';\nimport { Form } from \"./components/Form\";\nimport { Item } from \"./components/Item\";\nimport { Popup } from \"./components/Popup\";\nconst contentElement = document.querySelector(\".content\");\nconst popup = document.querySelector('.popup');\nconst itemContainer = new Page(contentElement);\nconst todoModel = new ToDoModel();\ntodoModel.items = todos;\nconst modal = new Popup(popup);\nconst itemPresenter = new ItemPresenter(todoModel, Form, itemContainer, Item, modal);\nitemPresenter.init();\nitemPresenter.renderView();\n","export class Page {\n    constructor(container) {\n        this.container = container;\n        this._formContainer = this.container.querySelector('.todo-form-container');\n        this._todoContainer = this.container.querySelector('.todos__list');\n    }\n    set todoContainer(items) {\n        this._todoContainer.replaceChildren(...items);\n    }\n    set formContainer(formElement) {\n        if (formElement) {\n            this._formContainer.replaceChildren(formElement);\n        }\n        else {\n            this._formContainer.innerHTML = \"\";\n        }\n    }\n}\n","export class ToDoModel {\n    constructor() {\n        this._items = [];\n    }\n    set items(data) {\n        this._items = data;\n    }\n    get items() {\n        return this._items;\n    }\n    addItem(data) {\n        const uniqueId = Math.max(...this._items.map(item => Number(item.id))) + 1;\n        const newItem = { id: String(uniqueId), name: data };\n        this._items.push(newItem);\n        return newItem;\n    }\n    removeItem(id) {\n        this._items = this._items.filter(item => item.id !== id);\n    }\n    getItem(id) {\n        return this._items.find(item => item.id === id);\n    }\n    editItem(id, name) {\n        const editedItem = this._items.find(item => item.id === id);\n        editedItem.name = name;\n    }\n    ;\n}\n","export const todos = [\n    { id: \"1\", name: \"Сделать проектную работу\" },\n    { id: \"2\", name: \"Полить цветы\" },\n    { id: \"3\", name: \"Пройти туториал по Реакту\" },\n    { id: \"4\", name: \"Сделать фронт для своего проекта\" },\n    { id: \"5\", name: \"Погулять с собакой\" },\n    { id: \"6\", name: \"Разобраться в замыканиях\" },\n    { id: \"7\", name: \"Решить задачу на Codewars\" },\n];\n","export class Popup {\n    constructor(container) {\n        this.container = container;\n        this.closeButton = container.querySelector('.popup__close');\n        this._content = container.querySelector('.popup__content');\n        this.closeButton.addEventListener('click', this.close.bind(this));\n        this.container.addEventListener('click', this.close.bind(this));\n        this._content.addEventListener('click', evt => {\n            evt.stopPropagation();\n        });\n    }\n    set content(value) {\n        this._content.replaceChildren(value);\n    }\n    open() {\n        this.container.classList.add('popup_is-opened');\n    }\n    close() {\n        this.container.classList.remove('popup_is-opened');\n        this.content = null;\n    }\n}\n","/**\n * Презентер отвечает за взаимодействие между классами рендера и работы с данными. Паттерн Facade\n */\nexport class ItemPresenter {\n    constructor(model, formConstuctor, viewPageContainer, viewItemConstructor, modal) {\n        this.model = model;\n        this.formConstuctor = formConstuctor;\n        this.viewPageContainer = viewPageContainer;\n        this.viewItemConstructor = viewItemConstructor;\n        this.modal = modal;\n        this.itemTemplate = document.querySelector('#todo-item-template');\n        this.formTemplate = document.querySelector('#todo-form-template');\n    }\n    init() {\n        this.todoForm = new this.formConstuctor(this.formTemplate);\n        this.todoForm.setHandler(this.handleFormSubmit.bind(this));\n        this.todoForm.buttonText = 'Добавить';\n        this.todoForm.placeholder = 'Следующее дело';\n        this.viewPageContainer.formContainer = this.todoForm.render();\n        this.todoEditForm = new this.formConstuctor(this.formTemplate);\n        this.todoEditForm.buttonText = 'Изменить';\n        this.todoEditForm.placeholder = 'Новое название';\n    }\n    handleFormSubmit(data) {\n        this.model.addItem(data);\n        this.renderView();\n        this.todoForm.clearValue();\n    }\n    handleSubmitEditForm(data, id) {\n        this.model.editItem(id, data);\n        this.renderView();\n        this.todoEditForm.clearValue();\n        this.modal.close();\n    }\n    handleCopyItem(item) {\n        const copyedItem = this.model.getItem(item.id);\n        this.model.addItem(copyedItem.name);\n        this.renderView();\n    }\n    handleDeleteItem(item) {\n        this.model.removeItem(item.id);\n        this.renderView();\n    }\n    handleEditItem(item) {\n        const editedItem = this.model.getItem(item.id);\n        this.todoEditForm.setValue(editedItem.name);\n        this.modal.content = this.todoEditForm.render();\n        this.todoEditForm.setHandler((data) => this.handleSubmitEditForm(data, item.id));\n        this.modal.open();\n    }\n    renderView() {\n        const itemList = this.model.items.map(item => {\n            const todoItem = new this.viewItemConstructor(this.itemTemplate);\n            todoItem.setCopyHandler(this.handleCopyItem.bind(this));\n            todoItem.setDeleteHandler(this.handleDeleteItem.bind(this));\n            const itemElement = todoItem.render(item);\n            return itemElement;\n        }).reverse();\n        this.viewPageContainer.todoContainer = itemList;\n    }\n}\n","export class Form {\n    constructor(formTemplate) {\n        this.formElement = formTemplate.content\n            .querySelector(\".todos__form\")\n            .cloneNode(true);\n        this.inputField = this.formElement.querySelector(\".todo-form__input\");\n        this.submitButton = this.formElement.querySelector(\".todo-form__submit-btn\");\n        this.formElement.addEventListener('submit', evt => {\n            evt.preventDefault();\n            this.handleFormSubmit(this.inputField.value);\n        });\n    }\n    setHandler(handleFormSubmit) {\n        this.handleFormSubmit = handleFormSubmit;\n    }\n    render() {\n        return this.formElement;\n    }\n    setValue(data) {\n        this.inputField.value = data;\n    }\n    getValue() {\n        return this.inputField.value;\n    }\n    clearValue() {\n        this.formElement.reset();\n    }\n    set buttonText(data) {\n        this.submitButton.textContent = data;\n    }\n    set placeholder(data) {\n        this.inputField.placeholder = data;\n    }\n}\n","export class Item {\n    constructor(template) {\n        this.itemElement = template.content.querySelector('.todo-item').cloneNode(true);\n        this.title = this.itemElement.querySelector('.todo-item__text');\n        this.copyButton = this.itemElement.querySelector('.todo-item__copy');\n        this.deleteButton = this.itemElement.querySelector('.todo-item__del');\n        this.editButton = this.itemElement.querySelector('.todo-item__edit');\n    }\n    get id() {\n        return this._id || '';\n    }\n    set id(value) {\n        this._id = value;\n    }\n    get name() {\n        return this.title.textContent || '';\n    }\n    set name(value) {\n        this.title.textContent = value;\n    }\n    setCopyHandler(handleCopyItem) {\n        this.handleCopyItem = handleCopyItem;\n        this.copyButton.addEventListener('click', evt => {\n            this.handleCopyItem(this);\n        });\n    }\n    setDeleteHandler(handleDeleteItem) {\n        this.handleDeleteItem = handleDeleteItem;\n        this.deleteButton.addEventListener('click', evt => {\n            this.handleDeleteItem(this);\n        });\n    }\n    setEditHandler(handleEditItem) {\n        this.handleEditItem = handleEditItem;\n        this.editButton.addEventListener('click', evt => {\n            this.handleEditItem(this);\n        });\n    }\n    render(item) {\n        this.name = item.name;\n        this.id = item.id;\n        return this.itemElement;\n    }\n}\n"],"names":["contentElement","document","querySelector","popup","itemContainer","Page","constructor","container","this","_formContainer","_todoContainer","todoContainer","items","replaceChildren","formContainer","formElement","innerHTML","todoModel","ToDoModel","_items","data","addItem","uniqueId","Math","max","map","item","Number","id","newItem","String","name","push","removeItem","filter","getItem","find","editItem","modal","Popup","closeButton","_content","addEventListener","close","bind","evt","stopPropagation","content","value","open","classList","add","remove","itemPresenter","ItemPresenter","model","formConstuctor","viewPageContainer","viewItemConstructor","itemTemplate","formTemplate","init","todoForm","setHandler","handleFormSubmit","buttonText","placeholder","render","todoEditForm","renderView","clearValue","handleSubmitEditForm","handleCopyItem","copyedItem","handleDeleteItem","handleEditItem","editedItem","setValue","itemList","todoItem","setCopyHandler","setDeleteHandler","reverse","Form","cloneNode","inputField","submitButton","preventDefault","getValue","reset","textContent","Item","template","itemElement","title","copyButton","deleteButton","editButton","_id","setEditHandler"],"sourceRoot":""}