{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/components/Page.ts","webpack://my-webpack-project/./src/components/ToDoModel.ts","webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/components/ToDoPresenter.ts","webpack://my-webpack-project/./src/components/Form.ts","webpack://my-webpack-project/./src/components/Item.ts"],"sourcesContent":["import \"./styles/styles.css\";\nimport { Page } from \"./components/Page\";\nimport { todos } from \"./utils/constants\";\nimport { ToDoModel } from \"./components/ToDoModel\";\nimport { ItemPresenter } from './components/ToDoPresenter';\nimport { Form } from \"./components/Form\";\nimport { Item } from \"./components/Item\";\nconst contentElement = document.querySelector(\".content\");\nconst itemContainer = new Page(contentElement);\nconst todoModel = new ToDoModel();\ntodoModel.items = todos;\nconst itemPresenter = new ItemPresenter(todoModel, Form, itemContainer, Item);\nitemPresenter.init();\nitemPresenter.renderView();\n","export class Page {\n    constructor(container) {\n        this.container = container;\n        this._formContainer = this.container.querySelector('.todo-form-container');\n        this._todoContainer = this.container.querySelector('.todos__list');\n    }\n    set todoContainer(items) {\n        this._todoContainer.replaceChildren(...items);\n    }\n    set formContainer(formElement) {\n        if (formElement) {\n            this._formContainer.replaceChildren(formElement);\n        }\n        else {\n            this._formContainer.innerHTML = \"\";\n        }\n    }\n}\n","export class ToDoModel {\n    constructor() {\n        this._items = [];\n    }\n    set items(data) {\n        this._items = data;\n    }\n    get items() {\n        return this._items;\n    }\n    addItem(data) {\n        const uniqueId = Math.max(...this._items.map(item => Number(item.id))) + 1;\n        const newItem = { id: String(uniqueId), name: data };\n        this._items.push(newItem);\n        return newItem;\n    }\n    removeItem(id) {\n        this._items = this._items.filter(item => item.id !== id);\n    }\n    getItem(id) {\n        return this._items.find(item => item.id === id);\n    }\n}\n","export const todos = [\n    { id: \"1\", name: \"Сделать проектную работу\" },\n    { id: \"2\", name: \"Полить цветы\" },\n    { id: \"3\", name: \"Пройти туториал по Реакту\" },\n    { id: \"4\", name: \"Сделать фронт для своего проекта\" },\n    { id: \"5\", name: \"Погулять с собакой\" },\n    { id: \"6\", name: \"Разобраться в замыканиях\" },\n    { id: \"7\", name: \"Решить задачу на Codewars\" },\n];\n","/**\n * Презентер отвечает за взаимодействие между классами рендера и работы с данными. Паттерн Facade\n */\nexport class ItemPresenter {\n    constructor(model, formConstuctor, viewPageContainer, viewItemConstructor) {\n        this.model = model;\n        this.formConstuctor = formConstuctor;\n        this.viewPageContainer = viewPageContainer;\n        this.viewItemConstructor = viewItemConstructor;\n        this.itemTemplate = document.querySelector('#todo-item-tempplate');\n        this.formTemplate = document.querySelector('#todo-form-template');\n    }\n    init() {\n        this.todoForm = new this.formConstuctor(this.formTemplate);\n        this.todoForm.setHandler(this.handleFormSubmit.bind(this));\n        this.viewPageContainer.formContainer = this.todoForm.render();\n    }\n    handleFormSubmit(data) {\n        this.model.addItem(data);\n        this.renderView();\n        this.todoForm.clearValue();\n    }\n    handleCopyItem(item) {\n        const copyedItem = this.model.getItem(item.id);\n        this.model.addItem(copyedItem.name);\n        this.renderView();\n    }\n    renderView() {\n        const itemList = this.model.items.map(item => {\n            const todoItem = new this.viewItemConstructor(this.itemTemplate);\n            todoItem.setCopyHandler(this.handleCopyItem.bind(this));\n            const itemElement = todoItem.render(item);\n            return itemElement;\n        }).reverse();\n        this.viewPageContainer.todoContainer = itemList;\n    }\n}\n","export class Form {\n    constructor(formTemplate) {\n        this.formElement = formTemplate.content\n            .querySelector(\".todos__form\")\n            .cloneNode(true);\n        this.inputField = this.formElement.querySelector(\".todo-form__input\");\n        this.submitButton = this.formElement.querySelector(\".todo-form__submit-btn\");\n        this.formElement.addEventListener('submit', evt => {\n            evt.preventDefault();\n            this.handleFormSubmit(this.inputField.value);\n        });\n    }\n    setHandler(handleFormSubmit) {\n        this.handleFormSubmit = handleFormSubmit;\n    }\n    render() {\n        return this.formElement;\n    }\n    setValue(data) {\n        this.inputField.value = data;\n    }\n    getValue() {\n        return this.inputField.value;\n    }\n    clearValue() {\n        this.formElement.reset();\n    }\n    set buttonText(data) {\n        this.submitButton.textContent = data;\n    }\n    set placeholder(data) {\n        this.inputField.placeholder = data;\n    }\n}\n","export class Item {\n    constructor(template) {\n        this.itemElement = template.content.querySelector('.todo-item').cloneNode(true);\n        this.title = this.itemElement.querySelector('.todo-item__text');\n        this.copyButton = this.itemElement.querySelector('.todo-item__copy');\n    }\n    get id() {\n        return this._id || '';\n    }\n    set id(value) {\n        this._id = value;\n    }\n    get name() {\n        return this.title.textContent || '';\n    }\n    set name(value) {\n        this.title.textContent = value;\n    }\n    setCopyHandler(handleCopyItem) {\n        this.handleCopyItem = handleCopyItem;\n        this.copyButton.addEventListener('click', evt => {\n            this.handleCopyItem(this);\n        });\n    }\n    render(item) {\n        this.name = item.name;\n        this.id = item.id;\n        return this.itemElement;\n    }\n}\n"],"names":["contentElement","document","querySelector","itemContainer","Page","constructor","container","this","_formContainer","_todoContainer","todoContainer","items","replaceChildren","formContainer","formElement","innerHTML","todoModel","ToDoModel","_items","data","addItem","uniqueId","Math","max","map","item","Number","id","newItem","String","name","push","removeItem","filter","getItem","find","itemPresenter","ItemPresenter","model","formConstuctor","viewPageContainer","viewItemConstructor","itemTemplate","formTemplate","init","todoForm","setHandler","handleFormSubmit","bind","render","renderView","clearValue","handleCopyItem","copyedItem","itemList","todoItem","setCopyHandler","reverse","Form","content","cloneNode","inputField","submitButton","addEventListener","evt","preventDefault","value","setValue","getValue","reset","buttonText","textContent","placeholder","Item","template","itemElement","title","copyButton","_id"],"sourceRoot":""}